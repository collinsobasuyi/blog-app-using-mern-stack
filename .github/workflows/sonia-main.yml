name: DevSecOps Pipeline
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Allows manual triggering of the workflow.

jobs: 
  gitleaks:
    runs-on: ubuntu-latest
    needs: sonar_cloud_unit_test_sast
    name: Gitleaks Secret Scan
    steps:
      - uses: actions/checkout@master
      - name: Run git leaks to check for secrets
        uses: gitleaks/gitleaks-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest
    needs: gitleaks
    name: SAST (Static Application Security Testing) - SonarCloud 
    steps:
    - uses: actions/checkout@master
      with:
        node-version: 20
        cache: npm
    - run: npm install
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=noev-dev
          -Dsonar.projectKey=noev-dev-project

  snyk:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v2
      - name: SCA (Software Composition Analysis) - SYNK
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    
        with:
          command: monitor

  zap_scan:
    runs-on: ubuntu-latest
    needs: snyk
    steps:
      - uses: actions/checkout@v2
      - name: DAST (Dynamic Application Security Testing) - ZAP
        uses: zaproxy/action-baseline@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://ginandjuice.shop/vulnerabilities' 
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
